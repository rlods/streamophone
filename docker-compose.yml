version: '3.2'

services:

  # Connect with CLI using:
  # docker run -it --network ..._data --rm redis:4-alpine redis-cli -h ..._cache_1 -a PWD
  cache:
    image: redis:4-alpine
    command: [
      "redis-server",
      "--appendonly", "yes",
      "--port", "${STREAMOPHONE_CACHE_PORT}",
      "--requirepass", "${STREAMOPHONE_CACHE_PASSWORD}"
    ]
    networks:
      - data
    sysctls:
      - net.core.somaxconn=511 # https://github.com/docker-library/redis/issues/35
    volumes:
      - ${STREAMOPHONE_CACHE_VOLUME}:/data
    ports:
      - ${STREAMOPHONE_CACHE_PORT}:${STREAMOPHONE_CACHE_PORT}
    restart: on-failure
      
  api:
    build:
      context: api
    networks:
      - backend
      - data
      - frontend
    environment:
      - STREAMOPHONE_API_PORT
      - STREAMOPHONE_API_URL
      - STREAMOPHONE_CACHE_HOST
      - STREAMOPHONE_CACHE_PORT
      - STREAMOPHONE_CACHE_PASSWORD
      - STREAMOPHONE_FREESOUND_TOKEN
      - STREAMOPHONE_SPOTIFY_CLIENT_ID
      - STREAMOPHONE_SPOTIFY_CLIENT_SECRET
      - STREAMOPHONE_STREAMER_URL
      - STREAMOPHONE_TEST_ASSETS_URL
      - STREAMOPHONE_WWW_URL
    depends_on:
      - cache
    ports:
      - ${STREAMOPHONE_API_PORT}:${STREAMOPHONE_API_PORT}
    read_only: true
    restart: on-failure

  www:
    build:
      context: www
      args:
        - STREAMOPHONE_API_URL
    environment:
      - STREAMOPHONE_WWW_PORT
    networks:
      - backend
      - frontend
    depends_on:
      - api
    ports:
      - ${STREAMOPHONE_WWW_PORT}:${STREAMOPHONE_WWW_PORT}
    read_only: true
    restart: on-failure

  proxy:
    image: haproxy:1.7-alpine
    networks:
      - frontend
    depends_on:
      - api
      - www
    ports:
      - 10000:10000 # TODO: in prod we should expose 80 & 443
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    restart: on-failure

networks:
  backend:
    driver: bridge
  data:
    driver: bridge
  frontend:
    driver: bridge
